openapi: 3.0.3
info:
  title: Recipes API
  version: 1.0.0

paths:
  /recipes:
    get:
      tags:
        - Recipe
      operationId: listRecipes
      summary: List recipes
      description: Retrieves all recipes.
      responses:
        "200":
          description: List of recipes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRecipesResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - Recipe
      operationId: createRecipe
      summary: Create a new recipe
      description: Creates a new recipe with title, making time, serves, ingredients, and cost.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRecipeRequest'
      responses:
        "200":
          description: Recipe successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRecipeResponse'
        "400":
          description: Bad request (validation or input errors)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /recipes/{id}:
    get:
      tags:
        - Recipe
      operationId: getRecipeById
      summary: Get recipe by ID
      description: Retrieves a recipe by its ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Recipe details by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecipeResponse'
        "404":
          description: Recipe not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Recipe
      operationId: updateRecipe
      summary: Update recipe by ID
      description: Updates a recipe by its ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRecipeRequest'
      responses:
        "200":
          description: Recipe successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRecipeResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Recipe not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Recipe
      operationId: deleteRecipe
      summary: Delete recipe by ID
      description: Deletes a recipe by its ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Recipe successfully removed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRecipeResponse'
        "404":
          description: No recipe found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRecipeResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    # ---------- Request Schemas ----------
    CreateRecipeRequest:
      type: object
      required:
        - title
        - making_time
        - serves
        - ingredients
        - cost
      additionalProperties: false
      properties:
        title:
          type: string
          maxLength: 100
          example: Tomato Soup
        making_time:
          type: string
          maxLength: 100
          example: 15 min
        serves:
          type: string
          maxLength: 100
          example: 5 people
        ingredients:
          type: string
          maxLength: 300
          example: onion, tomato, seasoning, water
        cost:
          type: integer
          minimum: 0
          example: 450
    UpdateRecipeRequest:
      type: object
      required:
        - title
        - making_time
        - serves
        - ingredients
        - cost
      additionalProperties: false
      properties:
        title:
          type: string
          maxLength: 100
          example: Tomato Soup
        making_time:
          type: string
          maxLength: 100
          example: 15 min
        serves:
          type: string
          maxLength: 100
          example: 5 people
        ingredients:
          type: string
          maxLength: 300
          example: onion, tomato, seasoning, water
        cost:
          type: integer
          minimum: 0
          example: 450

    # ---------- Response Schemas ----------
    CreateRecipeResponse:
      type: object
      properties:
        message:
          type: string
          example: Recipe successfully created!
        recipe:
          type: array
          items:
            $ref: '#/components/schemas/Recipe'
    Recipe:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 3
        title:
          type: string
          example: Tomato Soup
        making_time:
          type: string
          example: 15 min
        serves:
          type: string
          example: 5 people
        ingredients:
          type: string
          example: onion, tomato, seasoning, water
        cost:
          type: integer
          example: 450
        created_at:
          type: string
          example: 2016-01-12 14:10:12
        updated_at:
          type: string
          example: 2016-01-12 14:10:12
    ListRecipesResponse:
      type: object
      properties:
        recipes:
          type: array
          items:
            $ref: '#/components/schemas/RecipeListItem'
    RecipeListItem:
      type: object
      required:
        - id
        - title
        - making_time
        - serves
        - ingredients
        - cost
      properties:
        id:
          type: integer
          format: int64
          example: 1
        title:
          type: string
          example: Chicken Curry
        making_time:
          type: string
          example: 45 min
        serves:
          type: string
          example: 4 people
        ingredients:
          type: string
          example: onion, chicken, seasoning
        cost:
          type: string
          example: "1000"
    GetRecipeResponse:
      type: object
      properties:
        message:
          type: string
          example: Recipe details by id
        recipe:
          type: array
          items:
            $ref: '#/components/schemas/RecipeListItem'
    UpdateRecipeResponse:
      type: object
      properties:
        message:
          type: string
          example: Recipe successfully updated!
        recipe:
          type: array
          items:
            $ref: '#/components/schemas/UpdateRecipeItem'
    UpdateRecipeItem:
      type: object
      required:
        - title
        - making_time
        - serves
        - ingredients
        - cost
      properties:
        title:
          type: string
          example: Tomato Soup
        making_time:
          type: string
          example: 15 min
        serves:
          type: string
          example: 5 people
        ingredients:
          type: string
          example: onion, tomato, seasoning, water
        cost:
          type: string
          example: "450"
    DeleteRecipeResponse:
      type: object
      properties:
        message:
          type: string
          example: Recipe successfully removed!
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          example: An error occurred
        required:
          type: string
          example: title, making_time, serves, ingredients, cost